----------------------------------------------------------------------
Project: Complex Table View 1 - Author: Gavin M. Fulmer
Created: 09.03.2015 - Copyright (c) 2015 RavenWorks Media Group, L.L.C.
----------------------------------------------------------------------

-------------------
09.03.2015 - 2:09pm
-------------------

I have added the RMGSolidColorView class files. The table view's row
configuration will have a small custom view that will draw a random color.
The custom view will be set to this class.

-------------------
09.04.2015 - 7:46am
-------------------

I have added the RMGDesktopPicture class.

I have added identifiers for the view cell views along with the table columns
in the table view.

-------------------
09.08.2015 - 9:10am
-------------------

The Lord has truly blessed me this morning.  I have set-up the rest of the code
that loads all the desktop pictures into the app delegate's _desktopPictures
array.  In addition, the complex table view has been set-up to display the pictures
and its name.  This concludes the master portion of the master-detail design.

There was a hard-to-find bug that I was unable to figure out yesterday.  The uncaught
exception gave a little information about the crash.  Something to do with aString != nil.
Yesterday, I localized the problem code to be the loading portion of the desktop picture's
picture name into the NSView-based cell view.  However, my mind was tired and I gave it
up for this morning.

This morning came and my mind was refreshed.  The problem was that the 41st picture was
actually a directory.  My code did not properly handle this, as it placed within the
subviewField.stringValue (for NSView-based cells) nil.  I placed some code that would
detect whether the directory entry was a directory or just a file.  This solved the problem.

-------------------
09.10.2015 - 9:03am
-------------------

This commit adds some slight modifications to the various files.  This is a good place to save
before embarking on new ideas.

--------------------
09.10.2015 - 10:07am
--------------------

I have just implemented the 'last modification date' property for the detailed portion of the
master-detail design.  The Lord has blessed me with understanding so I could get this far.

-------------------
09.11.2015 - 9:13am
-------------------

I have implemented a feature where you can click the plus or minus button and load a random
color into the RMGSolidColorView object.  The RMGSolidColorView object can be found on the
second column to the right of the primary desktop picture image.

I have not decided yet whether to use the user defaults controller or implement defaults prog-
ramatically.  The idea is to save as a default value the number of random colors that each
desktop picture object can store and recall.

I have added these files to handle user defaults, error constants, and various typedefs for the program.

-------------------
09.12.2015 - 9:00am
-------------------

I am commiting two sessions.  The first is for the random color cache implementation; the other is to
update the project file and info.plist.  I have added a temporary icon to the project.

I have added the suite of files for the preferences panel.
I have changed the preference's window to NSPanel.

--------------------
09.14.2015 - 12:59pm
--------------------

I have added the preferences panel and its first option (have not wired-up the option yet).  I wanted to
commit this before pursuing the implementation of the preferences.  (Part of this is because I am still
testing ideas for the project that will use the preferences feature.)

-------------------
09.16.2015 - 9:51am
-------------------

This commit finishes the random color cache count implementation.

-------------------
09.17.2015 - 9:49am
-------------------

I have added the RMGMainDisplayView class files to implement drag and drop with a standard
NSImageView instance.

--------------------
09.21.2015 - 10:54am
--------------------

I have added the RMGPictureView class files for use in the drag and drop feature.

-------------------
09.22.2015 - 8:55am
-------------------

I am saving little odds and ends for all modified files.  The modifications are to place the program files
in a secure state before implementing drag and drop.  Because I have not worked extensively with drag and
drop I need a safe secure set of files to be committed in case I need to re-do the feature using information
from an outside source.

I have committed the .xcodeproj file to get it up to date for drag and drop.

I am making one more commit.  I trimmed off some straggler code and made a small edit to the MainMenu.xib file.

-------------------
10.01.2015 - 1:29pm
-------------------

I have subclassed NSTableView (RMGTableView) to pass mouse events to the RMGPictureView instances.  If this is
not done then the picture view does not receive mouse-down events and drag and drop will not work for the
picture view objects.
